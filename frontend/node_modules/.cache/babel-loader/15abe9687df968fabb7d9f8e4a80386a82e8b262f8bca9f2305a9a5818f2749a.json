{"ast":null,"code":"var _jsxFileName = \"D:\\\\gym-project\\\\frontend\\\\src\\\\pages\\\\StudentList.js\",\n  _s = $RefreshSig$();\n// src/pages/StudentList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './StudentList.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/students/all');\n        setStudents(response.data);\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n    fetchStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Roll No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hostel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.rollNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.hostel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.slot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, student.rollNo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)), students.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            children: \"No students found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentList, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","fetchStudents","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","rollNo","name","hostel","year","slot","count","length","colSpan","_c","$RefreshReg$"],"sources":["D:/gym-project/frontend/src/pages/StudentList.js"],"sourcesContent":["// src/pages/StudentList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentList.css'; // Import the CSS file\r\n\r\nconst StudentList = () => {\r\n  const [students, setStudents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/students/all');\r\n        setStudents(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching students:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-list-container\">\r\n      <h1>Student List</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Roll No</th>\r\n            <th>Name</th>\r\n            <th>Hostel</th>\r\n            <th>Year</th>\r\n            <th>Slot</th>\r\n            <th>Count</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {students.map((student) => (\r\n            <tr key={student.rollNo}>\r\n              <td>{student.rollNo}</td>\r\n              <td>{student.name}</td>\r\n              <td>{student.hostel}</td>\r\n              <td>{student.year}</td>\r\n              <td>{student.slot}</td>\r\n              <td>{student.count}</td>\r\n            </tr>\r\n          ))}\r\n          {students.length === 0 && (\r\n            <tr>\r\n              <td colSpan=\"6\">No students found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}