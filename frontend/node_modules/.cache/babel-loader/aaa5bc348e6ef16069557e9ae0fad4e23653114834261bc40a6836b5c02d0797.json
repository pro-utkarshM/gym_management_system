{"ast":null,"code":"var _jsxFileName = \"D:\\\\gym-project\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n    } else {\n      navigate('/login'); // Redirect to login if not authenticated\n    }\n  }, [navigate]);\n  const login = () => {\n    // Here, you should validate the login credentials.\n    // This example assumes successful login if a token is set.\n    localStorage.setItem('authToken', 'your-admin-token'); // Replace with actual token\n    setIsAuthenticated(true);\n    navigate('/');\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"h+xcTbG3Lgr87EDneWrcj9j4fAU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","navigate","token","localStorage","getItem","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/gym-project/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      navigate('/login'); // Redirect to login if not authenticated\r\n    }\r\n  }, [navigate]);\r\n\r\n  const login = () => {\r\n    // Here, you should validate the login credentials.\r\n    // This example assumes successful login if a token is set.\r\n    localStorage.setItem('authToken', 'your-admin-token'); // Replace with actual token\r\n    setIsAuthenticated(true);\r\n    navigate('/');\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACTF,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMI,KAAK,GAAGA,CAAA,KAAM;IAClB;IACA;IACAF,YAAY,CAACG,OAAO,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAAC;IACvDN,kBAAkB,CAAC,IAAI,CAAC;IACxBC,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBJ,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;IACpCR,kBAAkB,CAAC,KAAK,CAAC;IACzBC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,eAAe;MAAEM,KAAK;MAAEE;IAAO,CAAE;IAAAV,QAAA,EAC7DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAhB,EAAA,CAlCaF,YAAY;EAAA,QAENJ,WAAW;AAAA;AAAAuB,EAAA,GAFjBnB,YAAY;AAmCzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO1B,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAACsB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}